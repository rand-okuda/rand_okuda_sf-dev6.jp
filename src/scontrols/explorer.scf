<html>
<!--
Generated by AJAX tools
Date : Mon Dec 11 2006 22:24:07 GMT-0800 (Pacific Standard Time)
Template : simple.html by manoj@cheenath.com
Author : manoj
-->
<head>
<script src="/js/functions.js"></script>
<script src="/soap/ajax/8.0/connection.js"></script>

<script type="text/javascript">

    if (!sforce.connection.sessionId) {
        var sid = getCookie("sid");
        if (sid) {
            sforce.connection.sessionId = sid;
        } else {
            window.location = "/?startURL=" + window.location;
        }
    }

</script>

<script src="/js/dojo/0.3.1/dojo.js"></script>

<script>
    dojo.require("dojo.widget.ComboBox");
    dojo.require("dojo.widget.LayoutContainer");
    dojo.require("dojo.widget.ContentPane");
    dojo.require("dojo.widget.LinkPane");
    dojo.require("dojo.widget.SplitContainer");
    dojo.require("dojo.widget.ColorPalette");
    dojo.require("dojo.widget.TabContainer");
    dojo.require("dojo.widget.Tree");
    dojo.require("dojo.event.*");
    dojo.require("dojo.lang.*");
    dojo.require("dojo.widget.*");
</script>

<script>

    sforce.tools = {};
    sforce.tools.explorer = {};
    sforce.tools.explorer.root = {};
    sforce.tools.explorer.fields = {};
    sforce.tools.explorer.parent = {};
    sforce.tools.explorer.children = {};
    sforce.tools.explorer.describeCache = [];

    sforce.tools.explorer.init = function () {


        var div = document.getElementById("sobject");
        var result = sforce.connection.describeGlobal();
        var types = result.types;
        var options = [];
        options.push("<option>Select One</option>");
        for (var i = 0; i < types.length; i++) {
            options.push("<option>" + types[i] + "</option>");
        }
        div.innerHTML = options.join("\n");
    }

    dojo.addOnLoad(sforce.tools.explorer.init);

    sforce.tools.explorer.sobjectSelected = function () {
        var div = document.getElementById("sobject");
        if ("Select One" === div.value) {
            this.resetOptions();
            return;
        }
        var treediv = document.getElementById("tree-div");
        treediv.innerHTML = "";
        var sobj = div.value;
        var tree = dojo.widget.createWidget("Tree", {});

        this.root = dojo.widget.createWidget("TreeNode",
        {title: sobj});
        this.root.expandLevel = 2;
        tree.addChild(this.root);

        this.fields = dojo.widget.createWidget("TreeNode",
        {title: "Fields"});
        this.fields.expandLevel = 2;
        this.parents = dojo.widget.createWidget("TreeNode",
        {title: "Parents"});
        this.parents.expandLevel = 2;
        this.children = dojo.widget.createWidget("TreeNode",
        {title: "Children"});
        this.children.expandLevel = 2;

        this.root.addChild(this.fields);
        this.root.addChild(this.parents);
        this.root.addChild(this.children);

        this.createTree(sobj);
        treediv.appendChild(tree.domNode);
    }


    sforce.tools.explorer.describe = function(sobj) {
        if (this.describeCache[sobj] != null) {
            return this.describeCache[sobj];
        }
        var res = sforce.connection.describeSObject(sobj);
        this.describeCache[sobj] = res;
        return res;
    }

    sforce.tools.explorer.createTree = function(sobj) {

        var result = this.describe(sobj);
        var fields = result.getArray("fields");

        for (var i = 0; i < fields.length; i++) {
            var field = fields[i];

            if (field.referenceTo != null) {
                var name = field.relationshipName;
                if (name == null) {
                    name = field.name.replace(/Id$/, "");
                }
                var node = dojo.widget.createWidget(
                        "TreeNode", {title: name});
                var ref = field.getArray("referenceTo")[0];
                this.addRelationshipNodes(node, this.parents, ref);
            } else {
                var node = dojo.widget.createWidget(
                        "TreeNode", {title: field.name});
                this.addFieldNodes(node, this.fields);
            }
        }

        var childRelationships = result.getArray("childRelationships");
        for (var i=0; i<childRelationships.length; i++) {
            var relationship = childRelationships[i];
            if (relationship.relationshipName != null) {
              var node = dojo.widget.createWidget(
                    "TreeNode", {title: relationship.relationshipName});
              this.addRelationshipNodes(node, this.children, relationship.childSObject);
            }
        }
    }

    sforce.tools.explorer.addRelationshipNodes = function(node, parents, sobj) {
        parents.addChild(node);
        var result = this.describe(sobj);
        var fields = result.getArray("fields");

        for (var i = 0; i < fields.length; i++) {
            var field = fields[i];
            var child = dojo.widget.createWidget(
                    "TreeNode", {title: field.name});

            if (field.referenceTo != null) {
                //skip
            } else {
                this.addFieldNodes(child, node);
            }
        }
    }

    sforce.tools.explorer.addFieldNodes = function(node, parent) {
            var checkBox = document.createElement('input');
            checkBox.setAttribute('name', node.objectId);
            checkBox.setAttribute('type', 'checkbox');
            checkBox.setAttribute('onchange', 'javascript: sforce.tools.explorer.fieldChanged();');

            dojo.html.setClass(checkBox, 'treeCheckBox');

            dojo.dom.insertBefore(checkBox, node.titleNode);
            node.fieldCheckBox = checkBox;
            parent.addChild(node);
    }

    sforce.tools.explorer.fieldChanged = function() {
        var fieldsSoql = [];
        for (var i = 0; i < this.fields.children.length; i++) {
            if (this.fields.children[i].fieldCheckBox.checked === true) {
                fieldsSoql.push(this.fields.children[i].title);
            }
        }

        for (var i = 0; i < this.parents.children.length; i++) {
            var parent = this.parents.children[i];
            for (var j=0; j<parent.children.length; j++) {
                var parentField = parent.children[j];
                if (parentField.fieldCheckBox.checked === true) {
                  fieldsSoql.push(parent.title + "." + parentField.title);
                }
            }
        }

        for (var i = 0; i < this.children.children.length; i++) {
            var top = this.children.children[i];
            var subsoql = [];
            for (var j=0; j<top.children.length; j++) {
                var topField = top.children[j];
                if (topField.fieldCheckBox.checked === true) {
                  subsoql.push(topField.title);
                }
            }
            if (subsoql.length > 0) {
              fieldsSoql.push("(SELECT " + subsoql.join(", ") + " FROM " + top.title + ")");
            }
        }


        var soql = "SELECT " + fieldsSoql.join(", ") +
                   " FROM " + this.root.title + " LIMIT 20";

        var ta = document.getElementById("soql-ta");
        ta.value = soql;
    }

    sforce.tools.explorer.resetOptions = function () {
        alert("reset");
    }

    sforce.tools.explorer.runQuery = function () {
        var ta = document.getElementById("soql-ta");
        var result = document.getElementById("result-div");
        result.innerHTML = "Running Query ... ";
        sforce.connection.query(ta.value, {
            onSuccess : sforce.tools.explorer.querySuccess, 
            onFailure : function(error) {
                alert(error);
            }
        });
    }

sforce.tools.explorer.queryFailed = function (error) {
    var div = document.getElementById("result-div");
    var sb = new sforce.StringBuffer();
    sforce.tools.explorer.convert(error, sb, true);
    div.innerHTML = sb.toString();
}

sforce.tools.explorer.querySuccess = function (result) {
    var div = document.getElementById("result-div");
    var sb = new sforce.StringBuffer();
    sforce.tools.explorer.convert(result.getArray("records"), sb, true);
    div.innerHTML = sb.toString();
}

sforce.tools.explorer.convert = function (s, sb, isFirst) {
    if (s == null) {
        sb.append("null");
        return;
    }

    var tof = typeof s;

    if (tof == "string" || tof == "number" || tof == "function") {
        sb.append(s);
        return;
    } else if (tof == "object") {
        if (s.push && s.length > 0 && (typeof s[0] === "object")) {
            sb.append(this.makeExpandLink(isFirst) + "<table>");
            var heading = this.findHeading(s);
            sb.append("<tr>");
            for (var head in heading) {
                sb.append("<td><b>" + head + "</b></td>");
            }
            sb.append("</tr>");
            for (var i=0; i<s.length; i++) {
                sb.append("<tr>");
                for (var head in heading) {
                    sb.append("<td>");
                    this.convert(s[i][head], sb, false);
                    sb.append("</td>");
                }
                sb.append("</tr>");
            }
            sb.append("</table></span>");
        } else {
            sb.append(this.makeExpandLink(isFirst) + "<table>" );
            var arrays = [];
            for (var a in s) {
                if (typeof s[a] == "function") {
                    //skip
                } else if (s[a] && s[a].push) {
                    arrays[a] = s[a];
                } else {
                    sb.append("<tr><td><b>" + a + "</b></td><td>");
                    this.convert(s[a], sb, false);
                    sb.append("</td></tr>");
                }
            }
            for (var a in arrays) {
                sb.append("<tr><td colspan='2'>");
                sb.append("<b>" + a + "</b>");
                this.convert(arrays[a], sb, false);
                sb.append("</td></tr>")
            }
            sb.append("</table></span>");
        }
    }
}

sforce.tools.explorer._linkCount = 0;
sforce.tools.explorer.makeExpandLink = function (isFirst) {
    this._linkCount++;
    var rand = new Date().getTime() + "-" + this._linkCount;
    //var a = "<img src=\"/img/recurring_activity.gif\"></img>";
    var display = isFirst ? "block" : "none";
    //return a + "<a href='javascript: displayElement(\""+ rand +"\"); void 0;'>" + a + "</a>" +
            //"<span style='display: " + display + "' id='" + rand + "'>";
    return "<img src=\"/img/recurring_activity.gif\" onclick='javascript: sforce.tools.explorer.displayElement(\""+ rand +"\"); void 0;'>" +
           "<span style='display: " + display + "' id='" + rand + "'>";
}

sforce.tools.explorer.displayElement = function(id) {
    var doc = document.getElementById(id);
    if (doc.style.display == 'none') {
        doc.style.display = 'block';
    } else {
        doc.style.display = 'none';
    }
}

sforce.tools.explorer.findHeading = function(array) {
    var heading = [];
    for (var i=0; i<array.length; i++) {
        for (var a in array[i]) {
            if (typeof array[i][a] != "function") {
                heading[a] = true;
            }
        }
    }
    return heading;
}


</script>
<style>

    html, body {
        width: 100%; /* make the body expand to fill the visible window */
        height: 100%;
        overflow: auto; /* erase window level scrollbars */
        padding: 0 0 0 0;
        margin: 0 0 0 0;
    }

    .dojoSplitPane {
        margin: 5px;
    }

    #rightPane {
        margin: 0;
    }

        TABLE {
            border-collapse: collapse;
            border: 1px dotted red;
            font-size: 12px;
        }

        *#col1 {
            border: 3px solid black;
        }

        TD {
            border: 1px dotted green;
            padding: .25em;
        }

        TD.solid-blue {
            border: 5px dashed blue;
        }

        TD.solid-green {
            border: 5px solid green;
        }
</style>

</head>
<body>


<table width="100%" height="100%">
    <tr>
        <td colspan=2 valign="top">
            <div style="background-color: #274383; color: white;"> SOQL Explorer</div>
        </td>
    </tr>
    <tr valign="top" height="100%">
        <td valign="top">
            <div> SObject <select name="state" id="sobject" autocomplete="true"
                                  onChange="javascript: sforce.tools.explorer.sobjectSelected();"> </select> <br>

                <div id="tree-div" height="100%"></div>
            </div>
        </td>
        <td valign="top">
            <div id="mainTabContainer"><textarea id="soql-ta" rows="10" cols="80"> SOQL statment here </textarea></div>
            <input type="submit" value="Run Query" name="Run Query" onclick="sforce.tools.explorer.runQuery()"></input>
            <div id="result-div"> Result here</div>
        </td>
    </tr>
    <tr>
        <td colspan=2>
            <div style="background-color: #274383; color: white;"> Status:</div>
        </td>
    </tr>
</table>
</body>
</html>